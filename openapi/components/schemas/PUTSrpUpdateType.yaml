allOf:
  - properties:
      chargeUpdateDetails:
        description: |
          Container for one or more product rate plan charges. 
        items:
          $ref: ./PUTScUpdateType.yaml
        type: array
      contractEffectiveDate:
        description: >
          The date when the amendment changes take effect. The format of the
          date is yyyy-mm-dd.


          If there is already a future-dated Update Product amendment on the
          subscription, the `specificUpdateDate` field will be used instead of
          this field to specify when the Update Product amendment takes effect.
        format: date
        type: string
      customerAcceptanceDate:
        description: >
          The date when the customer accepts the contract in yyyy-mm-dd format.


          If this field is not set:


          * If the `serviceActivationDate` field is not set, the value of this
          field is set to be the contract effective date.

          * If the `serviceActivationDate` field is set, the value of this field
          is set to be the service activation date.


          The billing trigger dates must follow this rule:


          contractEffectiveDate <= serviceActivationDate <=
          contractAcceptanceDate
        format: date
        type: string
      externalCatalogPlanId:
        description: >
          An external ID of the rate plan to be updated. You can use this field
          to specify an existing rate plan in your subscription. The value of
          the `externalCatalogPlanId` field must match one of the values that
          are predefined in the `externallyManagedPlanIds` field on a product
          rate plan. However, if there are multiple rate plans with the same
          `productRatePlanId` value existing in the subscription, you must use
          the `ratePlanId` field to update the rate plan. The
          `externalCatalogPlanId` field cannot be used to distinguish multiple
          rate plans in this case.


          **Note:** If both `externalCatalogPlanId` and `ratePlanId` are
          provided. They must point to the same product rate plan. Otherwise,
          the request would fail.
        type: string
      externalIdSourceSystem:
        description: >
          The ID of the external source system. You can use this field and
          `externalCatalogPlanId` to specify a product rate plan that is
          imported from an external system.


          **Note:** If both `externalCatalogPlanId`, `externalIdSourceSystem`
          and `productRatePlanId` are provided. They must point to the same
          product rate plan. Otherwise, the request would fail.
        type: string
      externallyManagedPlanId:
        description: >
          Indicates the unique identifier for the rate plan purchased on a
          third-party store. This field is used to represent a subscription rate
          plan created through third-party stores.
        type: string
      ratePlanId:
        description: >
          ID of a rate plan for this subscription. This can be the latest
          version or any history version of ID.
        type: string
      serviceActivationDate:
        description: >
          The date when the update amendment is activated in yyyy-mm-dd format.


          You must specify a Service Activation date if the Customer Acceptance
          date is set. If the Customer Acceptance date is not set, the value of
          the `serviceActivationDate` field defaults to be the Contract
          Effective Date.


          The billing trigger dates must follow this rule:


          contractEffectiveDate <= serviceActivationDate <=
          contractAcceptanceDate
        format: date
        type: string
      specificUpdateDate:
        description: >
          The date when the Update Product amendment takes effect. This field is
          only applicable if there is already a future-dated Update Product
          amendment on the subscription. The format of the date is yyyy-mm-dd.


          Required only for Update Product amendments if there is already a
          future-dated Update Product amendment on the subscription.
        format: date
        type: string
    required:
      - contractEffectiveDate
    type: object
  - $ref: ./RatePlanObjectCustomFields.yaml
title: update
